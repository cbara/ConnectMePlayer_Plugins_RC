// Generated by CoffeeScript 1.3.1
(function() {
	__bind = function(fn, me) {
		return function() {
			return fn.apply(me, arguments);
		};
	}, __hasProp = {}.hasOwnProperty, __extends = function(child, parent) {
		for (var key in parent) {
			if (__hasProp.call(parent, key))
				child[key] = parent[key];
		}
		function ctor() {
			this.constructor = child;
		}


		ctor.prototype = parent.prototype;
		child.prototype = new ctor;
		child.__super__ = parent.prototype;
		return child;
	};

	window.GoogleWeatherPlugin = (function(_super) {
		__extends(GoogleWeatherPlugin, _super);

		GoogleWeatherPlugin.name = 'GoogleWeatherPlugin';

		function GoogleWeatherPlugin() {
			return GoogleWeatherPlugin.__super__.constructor.apply(this, arguments);
		}

		var latitude, longitude;
		var locationName, map;

		GoogleWeatherPlugin.prototype.init = function() {
			var annotation, _i, _len, _ref, _results, _this = this;
			console.log("Initialize GoogleWeatherPlugin");
			//console.info("annotations", this.lime.annotations);
			jQuery(this.lime).bind('timeupdate', function(e) {
			});
			_ref = this.lime.annotations;
			_results = [];
			for ( _i = 0, _len = _ref.length; _i < _len; _i++) {
				annotation = _ref[_i];
				if (annotation.resource.value.indexOf("geonames") > 0 && annotation.resource.value.indexOf("about.rdf") < 0) {
					jQuery(annotation).bind('becomeActive', function(e) {
						var domEl;
						//	console.info(e.annotation, 'became active');
						//	console.log(_this.lime.widgetContainers);
						domEl = _this.lime.allocateWidgetSpace("GoogleWeatherPlugin");
						if (domEl) {
							//		console.log("geonames annot");
							//	domEl.html("<a href='" + e.annotation.resource + "' target='_blank' >" + e.annotation.resource + "</a>");
							if (e.annotation.ldLoaded) {
								domEl.html(_this.renderAnnotation(e.annotation));
							} else {
								jQuery(e.annotation).bind('ldloaded', function(e2) {
									//console.log("anno is ldLoaded -> rendering");
									return domEl.html(_this.renderAnnotation(e.annotation));
								});
								domEl.html(_this.renderAnnotation(e.annotation));
							}
							domEl.click(function() {//click behaviour - highlight the related widgets by adding a class to them

								_this.lime.player.pause();
								_this.displayModal(e.annotation);
								;
							});
							return e.annotation.widgets.GoogleWeatherPlugin = domEl;
						} else { debugger;
						}

					});
					_results.push(jQuery(annotation).bind("becomeInactive", function(e) {
						//console.info(e.annotation, 'became inactive');
						e.annotation.widgets.GoogleWeatherPlugin.remove();
						return
						delete e.annotation.widgets.GoogleWeatherPlugin;
					}));
				}
			}
			return _results;
		};

		GoogleWeatherPlugin.prototype.renderAnnotation = function(annotation) {

			var latDeg, latMin, latSec, lonDeg, lonMin, lonSec, props, _ref, _ref1, queryString, returnResult;
			var hasWeather = false;

			var returnResult = "<p> Should be a Weather widget here </p>";
			try {
				if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
					xmlhttp = new XMLHttpRequest();
				} else {// code for IE6, IE5
					xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
				}
				xmlhttp.open("POST", annotation.resource.value + "/about.rdf", false);
				xmlhttp.send();
				xmlDoc = xmlhttp.responseXML;
				
				var  queryString;
				//document.write("<table border='1'>");
				var x = xmlDoc.getElementsByTagName("Feature");
				for ( i = 0; i < x.length; i++) {
					locationName = x[i].getElementsByTagName("name")[0].childNodes[0].nodeValue;
					latitude = x[i].getElementsByTagName("lat")[0].childNodes[0].nodeValue;
					longitude = x[i].getElementsByTagName("long")[0].childNodes[0].nodeValue;
					//console.log("weather map for "+locationName+" : "+latitude +" "+longitude);
				}
				if (locationName != "") {

					locationName = locationName.replace(" ", "+");
					hasWeather = true;
					// querystring = "http://www.google.com/ig/api?weather=" + locationName;
					querystring = "./backup/" + locationName + ".xml";

					xmlhttp.open("GET", querystring, false);
					xmlhttp.send();
					xmlDoc = xmlhttp.responseXML;
					var city = xmlDoc.getElementsByTagName("city")[0].getAttribute("data");
					//console.log("Weather in: " + city);
					var temp_c = xmlDoc.getElementsByTagName("temp_c")[0].getAttribute("data");
					var temp_f = xmlDoc.getElementsByTagName("temp_f")[0].getAttribute("data");
					var current_conditions = xmlDoc.getElementsByTagName("current_conditions");
					var weather_condition = current_conditions[0].getElementsByTagName("condition")[0].getAttribute("data");
					var weather_icon = current_conditions[0].getElementsByTagName("icon")[0].getAttribute("data");
					weather_icon = "http://www.google.com" + weather_icon;

					returnResult = "<div id=\"weatherWidget\" class=\"googleWeather\" style=\"width: inherit; height: 75%; font-family:verdana; font-size:14px; background-image: linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -o-linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -moz-linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -webkit-linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -ms-linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -webkit-gradient(	linear,	left bottom, left top, color-stop(0.32, rgb(33,26,20)), color-stop(0.66, rgb(69,61,55)), color-stop(0.15, rgb(28,22,21))); color: white;\">";
					returnResult += "<table style=\" margin: 0 auto;\">";
					returnResult += "<tr>";
					returnResult += "<td>";
					returnResult += "" + temp_c + " C";
					returnResult += "</td>";
					returnResult += "<td>";
					returnResult += "" + temp_f + " F";
					returnResult += "</td>";
					returnResult += "</tr>";
					returnResult += "</table>";
					returnResult += "<table style=\" margin: 0 auto;\">";
					returnResult += "<tr>";
					returnResult += "<td>";
					returnResult += "<img src=\"" + weather_icon + "\" style=\" width: 100px; height: 100px;\" >";
					returnResult += "</td>";
					returnResult += "</tr>";
					returnResult += "<tr>";
					returnResult += "<td>";
					returnResult += "" + city;
					returnResult += "</td>";
					returnResult += "</tr>";
					returnResult += "</table>";
					returnResult += "<table style=\" margin: 0 auto;\">";
					var forecast_conditions = xmlDoc.getElementsByTagName("forecast_conditions");
					for ( i = 0; i < forecast_conditions.length; i++) {
						var forecast_conditions_day = forecast_conditions[i].getElementsByTagName("day_of_week")[0].getAttribute("data");
						var forecast_conditions_icon = "http://www.google.com" + forecast_conditions[i].getElementsByTagName("icon")[0].getAttribute("data");
						var forecast_conditions_low = parseInt(forecast_conditions[i].getElementsByTagName("low")[0].getAttribute("data"));
						var forecast_conditions_high = parseInt(forecast_conditions[i].getElementsByTagName("high")[0].getAttribute("data"));
						var forecast_conditions_med = parseInt((forecast_conditions_high + forecast_conditions_low) / 2);
						var forecast_conditions_medC = parseInt((forecast_conditions_med - 32) * 5 / 9);
						returnResult += "<tr>";
						returnResult += "<td>";
						returnResult += "" + forecast_conditions_day;
						returnResult += "</td>";
						returnResult += "<td>";
						returnResult += "<img src=\"" + forecast_conditions_icon + "\" style=\" width: 20px; height: 20px;\" >";
						returnResult += "</td>";
						returnResult += "<td>";
						returnResult += "" + forecast_conditions_medC + " C ";
						returnResult += "</td>";
						returnResult += "<td>";
						returnResult += "" + forecast_conditions_med + " F ";
						returnResult += "</td>";
						returnResult += "</tr>";
					}
					returnResult += "</table>";
					returnResult += "<div id=\"colorFooter\" style=\"height: 10px; width: 100%; background-color: lightcoral;\" >&nbsp;</div>";
					returnResult += "</div>";
				//	console.log(" is " + temp_c + " Celsius = " + temp_f + " Farenheit " + weather_condition + "  icon " + weather_icon);
				}

			} catch(exception) {
			}
			//console.log("hasCoord: " + hasWeather);
			return returnResult;

		};

		function showWeatherInModalWindow(outputElement) {
			var output = document.getElementById(outputElement);
			var latlng = new google.maps.LatLng(latitude, longitude);
			//console.log("latitude: " + latitude + " longitude: " + longitude + " = latlong: " + latlng);
			var myOptions = {
				zoom : 11,
				center : latlng,
				mapTypeId : google.maps.MapTypeId.ROADMAP
			}
			var map = new google.maps.Map(output, myOptions);

			var weatherLayer = new google.maps.weather.WeatherLayer({
				temperatureUnits : google.maps.weather.TemperatureUnit.CELSIUS
			});
			weatherLayer.setMap(map);
			//$(modalcontainer).css('height', "70%");
		}

		GoogleWeatherPlugin.prototype.displayModal = function(annotation) {// Modal window script usin jquery

			// Get Modal Window
			//var modalcontainer;
			if (this.lime.player.isFullScreen) {
				modalcontainer = $('.modalwindow');
			} else {
				modalcontainer = $('#modalWindow');
			}

			// Get mask element
			var mask;
			if (this.lime.player.isFullScreen) {
				mask = $('.mask');
			} else {
				mask = $('#mask');
			}
			$(modalcontainer).css('height', "70%");
			$(modalcontainer).empty();
			$(modalcontainer).append("<a href=\"#\" class=\"close\" role=\"button\"><img src=\"img/close-icon.png\" style=\"width: 22px; height: 22px;\"/></a>");
			$(modalcontainer).append("<div id=\"modalContent\" style=\"height: 95%; width: 100%; position: relative; margin: 0 auto; \"> &nbsp");
			//	$(modalcontainer).append("<div id=\"mapLabel\" style=\"width: inherit; height: 25%; font-family:verdana; font-size:14px; /media/EXPRESSGATE/MyWorks/For_Seekda/TV Emulator/Dev/ConnectMe_1.2/img/sport.pngkground-image: -ms-linear-gradient(bottom, rgb(33,26,20) 32%, rgb(69,61,55) 66%, rgb(28,22,21) 15%); background-image: -webkit-gradient(	linear,	left bottom, left top, color-stop(0.32, rgb(33,26,20)), color-stop(0.66, rgb(69,61,55)), color-stop(0.15, rgb(28,22,21))); color: white\"> " + "<table> <tr> <td> <img src=\"img/mapIcon.png\" style=\"width: 40px; height: 40px;\" ></td><td><em style=\"font-size:18px; color: white;\">" + locationName + "</em></td></tr></table>" + "&nbsp;&nbsp;  lat: " + latitude + "; long: " + longitude + "</div>");
			$(modalcontainer).append("</div>");
			//console.log("$(modalcontainer) = " + $(modalcontainer).html() + " modalcontainer " + modalcontainer.html());

			//Get the screen height and width
			var maskHeight = $(window).height();
			var maskWidth = $(window).width();

			//Set heigth and width to mask to fill up the whole screen
			$(mask).css({
				'width' : maskWidth,
				'height' : maskHeight
			});

			//transition effect
			$(mask).fadeIn(100);
			$(mask).fadeTo("fast", 0.8);

			//Get the window height and width
			var winH = $(window).height();
			var winW = $(window).width();

			//Set the popup window to center
			$(modalcontainer).css('top', winH / 2 - $(modalcontainer).height() / 2);
			$(modalcontainer).css('left', winW / 2 - $(modalcontainer).width() / 2);

			//transition effect
			$(modalcontainer).fadeIn(100);

			//if close button is clicked
			$('.close').click(function(e) {
				//Cancel the link behavior
				e.preventDefault();
				$(mask).hide();
				$(modalcontainer).hide();
			});

			//if mask is clicked
			$(mask).click(function() {
				$(this).hide();
				$(modalcontainer).hide();
			});

			$(window).resize(function() {

				//var box = modalcontainer;

				//Get the screen height and width
				var maskHeight = $(document).height();
				var maskWidth = $(document).width();

				//Set height and width to mask to fill up the whole screen
				$(mask).css({
					'width' : maskWidth,
					'height' : maskHeight
				});

				//Get the window height and width
				var winH = $(window).height();
				var winW = $(window).width();

				//Set the popup window to center
				$(modalcontainer).css('top', winH / 2 - $(modalcontainer).height() / 2);
				$(modalcontainer).css('left', winW / 2 - $(modalcontainer).width() / 2);
				//box.blur(function() { setTimeout(<bluraction>, 100); });

			});
			showWeatherInModalWindow("modalContent");
			
		}

		return GoogleWeatherPlugin;

	})(window.LimePlugin);

}).call(this);
