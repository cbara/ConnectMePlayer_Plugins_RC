// Generated by CoffeeScript 1.3.1
(function() {  
	/*ConnectME annotation toggler button that shows/hides the annotations on Fullscreen */	  
  _V_.AnnotationToggle = _V_.Button.extend({
    buttonText: "Annotations On/Off",
    buildCSSClass: function() {
      return "vjs-annotationstoggler " + this._super();
    },
    onClick: function() {
	  
      if (LimePlayer.options.annotationsVisible === false) {
		$(".vjs-annotationstoggler").removeClass("annotationstoggler-off");
        LimePlayer.options.annotationsVisible = true;
		if(LimePlayer.player.AnnotationOverlaysComponent) LimePlayer.player.AnnotationOverlaysComponent.show();
		
        if (this.player.isFullScreen) {	//show Annotations sidebars
		   LimePlayer.player.AnnotationsSidebars.show();
        } else {	//only show in fullscreen
			LimePlayer.player.AnnotationsSidebars.hide();
        }
      } 
	  else {	//toggle off Annotation overlays
	  $(".vjs-annotationstoggler").addClass("annotationstoggler-off");
        LimePlayer.player.AnnotationsSidebars.hide();
		if(LimePlayer.player.AnnotationOverlaysComponent) LimePlayer.player.AnnotationOverlaysComponent.hide();
        LimePlayer.options.annotationsVisible = false;
      }
	  console.log("fullscreen " + this.player.isFullScreen, "visible "+LimePlayer.options.annotationsVisible);
    }
  });

/*ConnectME Annotation Sidebars for fullscreen mode - displays 4 fixed regions (NWSE) as containers for widgets */	  
_V_.AnnotationsSidebars = _V_.Component.extend({	//for  annotations on the sidebars
  options: {
    loadEvent: "play",
  },
	
  init: function(player, options){
    this._super(player, options);
	player.addEvent("fullscreenchange", this.proxy(function(){	//for hiding overlay annotations when not in fullscreen
		if(this.player.isFullScreen==false) 
			this.hide();
	}));
    player.addEvent("play", this.proxy(function(){
      this.fadeIn();
      this.player.addEvent("mouseover", this.proxy(this.fadeIn));
      //this.player.addEvent("mouseout", this.proxy(this.fadeOut));	//maybe we want to 
    }));
	this.player.AnnotationsSidebars = this;	//attach Component for sidebar annotations to player
  },

  createElement: function(){	//we just attach and show the "annotation-wrapper" div created in the _initVideoPlayer method
	return $('.annotation-wrapper', this.el).show()[0];
  },
  
  fadeIn: function(){
    this._super();
  },

  fadeOut: function(){
    this._super();
  },

  lockShowing: function(){
    this.el.style.opacity = "1";
  }
});  


}).call(this);